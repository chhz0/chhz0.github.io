<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on &lt;ch'ang/></title><link>https://chhz0.github.io/tags/golang/</link><description>Recent content in Golang on &lt;ch'ang/></description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 15 Sep 2025 15:29:25 +0800</lastBuildDate><atom:link href="https://chhz0.github.io/tags/golang/rss.xml" rel="self" type="application/rss+xml"/><item><title>Golang/Context</title><link>https://chhz0.github.io/posts/golang/context/</link><pubDate>Mon, 15 Sep 2025 15:29:25 +0800</pubDate><guid>https://chhz0.github.io/posts/golang/context/</guid><description>&lt;blockquote>
&lt;p>Context(上下文) 是 Go 语言中用于在并发程序中传递截止时间、取消信号和其他请求范围值的机制.&lt;/p>&lt;/blockquote>
&lt;h2 id="推荐阅读">推荐阅读&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://go.dev/src/context/context.go">context.go&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://go.dev/blog/context">Go Concurrency Patterns: Context&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://go.dev/blog/context-and-structs">Contexts and structs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sohamkamani.com/golang/context/">How to Use Context in Golang (Deadlines, Cancellation, and Passing Values)&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>